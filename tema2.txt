1)

elim(_, [], []).
elim(X, [X|Xs], L):-
    elim(X, Xs, L),
    !.

elim(X, [Y|Xs], [Y|L]):-
    not(X = Y),
    elim(X, Xs, L).

/** <examples>
?- elim(a, [a, b, c], L).
*/


4)

factor(1,_,[]).
factor(N, F, [F|Lista]):-
    0 is mod(N,F),
    N1 is N/F,
    factor(N1, F, Lista),
    !.
factor(N, F, Lista):-
    F1 is F+1,
    factor(N, F1, Lista),
    !.
descomp(N, Lista):-
    F is 2,
    factor(N, F, Lista),
    !.
/** <examples>
?- descomp(10, L).
?- descomp(100, L).
?- descomp(102, L).
*/


6)

palindrom([_]) :- !.
palindrom(Xs) :-
    append([X|Ys], [X], Xs),
    palindrom(Ys).

/** <examples>
?- palindrom([8,2,2,7]).
?- palindrom([1,2,2,1]).
?- palindrom([1,2,2,2,1]).
?- palindrom([1,2,3,4,3,4,3,2,1,1]).
*/


10)

imparte(L, A, B) :-
   append(A, B, L),
   length(A, N),
   length(B, N), !.
imparte(L, A, B) :-
   append(A, B, L),
   length(B, N),
   M is N+1,
   length(A, M), !.

/** <examples>
?- imparte([1, 2, 3, 4, 5], A, B).
?- imparte([1, 2, 3, 4], A, B).
*/


12)

parimpar([X], [X], []).
parimpar([X, Y], [X], [Y]).
parimpar([X, Y|L], [X|L1], [Y|L2]) :-
	parimpar(L, L1, L2).

/** <examples>
?- parimpar([1,2,3,4,5,6,7,8,9], L1, L2).
?- parimpar([1,2,2,2,4], L1, L2).
?- parimpar([11,12,0,11,11,3,-7], L1, L2).
?- parimpar([1,2,3,4,3,4,3,2,1,1], L1, L2).
*/